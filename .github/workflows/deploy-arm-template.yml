name: Deploy Azure Workbook

on:
  # Trigger after the combine workbook workflow completes successfully
  workflow_run:
    workflows: ["Combine Workbook into ARM Template"]
    types:
      - completed
    branches: [main]
  # Manual trigger for direct deployment
  push:
    branches: [main]
    paths:
      - "demo-armtemplate-1.json"
      - ".github/workflows/deploy-arm-template.yml"
  pull_request:
    branches: [main]
    paths:
      - "demo-armtemplate-1.json"
      - "demo-workbook-1.json"
      - ".github/workflows/deploy-arm-template.yml"
      - ".github/workflows/combine-workbook-into-arm.yml"
  workflow_dispatch:
    inputs:
      resourceGroupName:
        description: "Resource Group Name"
        required: true
        default: "rg-azure-workbook-demo"
      location:
        description: "Azure Region"
        required: true
        default: "West Europe"
        type: choice
        options:
          - "West Europe"
          - "East US"
          - "East US 2"
          - "West US 2"
          - "Central US"

env:
  AZURE_RESOURCE_GROUP: ${{ github.event.inputs.resourceGroupName || 'rg-azure-workbook-demo' }}
  AZURE_LOCATION: ${{ github.event.inputs.location || 'West Europe' }}

permissions:
  id-token: write
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    name: Validate ARM Template
    # Only run if triggered by successful combine workflow or manual triggers
    if: >
      github.event_name != 'workflow_run' || 
      github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # When triggered by workflow_run, checkout the head commit from that workflow
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.sha }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Validate ARM Template
        run: |
          az deployment group validate \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --template-file demo-armtemplate-1.json \
            --parameters workbookId="$(uuidgen)" \
            --parameters workbookDisplayName="Sample Dashboard WPNinjas 2025 - CI/CD" \
            --parameters location="${{ env.AZURE_LOCATION }}" \
            --parameters templateName="A Workbook Template" \
            --parameters templateCategory="Deployed Templates"

  deploy:
    runs-on: ubuntu-latest
    needs: validate
    # Deploy on main branch or manual trigger, and only if triggered by successful combine workflow or manual triggers
    if: >
      (github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch') &&
      (github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success')
    name: Deploy Azure Workbook
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # When triggered by workflow_run, checkout the head commit from that workflow
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.sha }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Resource Group
        run: |
          az group create \
            --name ${{ env.AZURE_RESOURCE_GROUP }} \
            --location "${{ env.AZURE_LOCATION }}" \
            --tags Environment=Demo Project=Azure-Workbook-Deployment-Demo CreatedBy=GitHub-Actions

      - name: Create deployment
        run: |
          echo "üöÄ Starting ARM template deployment..."
          
          DEPLOYMENT_OUTPUT=$(az deployment group create \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --template-file demo-armtemplate-1.json \
            --parameters workbookId="$(uuidgen)" \
            --parameters workbookDisplayName="Sample Dashboard WPNinjas 2025 - CI/CD" \
            --parameters location="${{ env.AZURE_LOCATION }}" \
            --parameters templateName="A Workbook Template" \
            --parameters templateCategory="Deployed Templates" \
            --parameters resourceTags='{"Environment":"Demo","Project":"Azure-Workbook-Deployment-Demo","CreatedBy":"GitHub-Actions","DeploymentId":"${{ github.run_number }}","CommitSha":"${{ github.sha }}"}' \
            --name "workbook-deployment-${{ github.run_number }}" \
            --output json)
          
          echo "‚úÖ Deployment completed!"
          echo "üìä Deployment details:"
          echo "$DEPLOYMENT_OUTPUT" | jq -r '.properties.provisioningState'
          
          # Check if deployment was successful
          PROVISIONING_STATE=$(echo "$DEPLOYMENT_OUTPUT" | jq -r '.properties.provisioningState')
          if [ "$PROVISIONING_STATE" != "Succeeded" ]; then
            echo "‚ùå Deployment failed with state: $PROVISIONING_STATE"
            exit 1
          fi

      - name: Output Deployment Information
        run: |
          echo "### üöÄ Deployment Successful! ###" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Workbook Name:** Sample Dashboard WPNinjas 2025 - CI/CD" >> $GITHUB_STEP_SUMMARY
          echo "**Resource Group:** ${{ env.AZURE_RESOURCE_GROUP }}" >> $GITHUB_STEP_SUMMARY
          echo "**Location:** ${{ env.AZURE_LOCATION }}" >> $GITHUB_STEP_SUMMARY
          echo "**Deployment Name:** workbook-deployment-${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üîó [View Resource Group in Azure Portal](https://portal.azure.com/#@/resource/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ env.AZURE_RESOURCE_GROUP }}/overview)" >> $GITHUB_STEP_SUMMARY

  test-deployment:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    name: Test Deployment
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Verify Workbook Template Deployment
        run: |
          echo "Checking if workbook template was deployed successfully..."
          
          # First, list all resources to see what was actually deployed
          echo "üìã All resources in Resource Group:"
          az resource list \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --output table
          
          echo ""
          echo "üîç Looking specifically for workbook templates..."
          
          # Check for workbook templates with more flexible criteria
          TEMPLATE_COUNT=$(az resource list \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --resource-type "microsoft.insights/workbooktemplates" \
            --query "length([])" \
            --output tsv)

          echo "Found $TEMPLATE_COUNT workbook template(s) in the resource group."

          if [ "$TEMPLATE_COUNT" -gt 0 ]; then
            echo "‚úÖ Workbook template deployment verified successfully!"
            
            # Show details of the deployed templates
            echo "üìù Workbook template details:"
            az resource list \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --resource-type "microsoft.insights/workbooktemplates" \
              --output table
          else
            echo "‚ùå Workbook template verification failed!"
            echo "No workbook templates found in the resource group."
            
            # Check if there are any other resources that might indicate the deployment worked
            ALL_RESOURCES=$(az resource list \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --query "length([])" \
              --output tsv)
            
            if [ "$ALL_RESOURCES" -gt 0 ]; then
              echo "‚ö†Ô∏è However, found $ALL_RESOURCES other resource(s) in the group. The deployment may have succeeded with a different resource type."
              echo "This might indicate an issue with the template or resource type specification."
            fi
            
            exit 1
          fi
