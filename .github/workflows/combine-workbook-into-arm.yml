name: Combine Workbook into ARM Template

on:
  push:
    branches: [ main ]
    paths:
      - 'demo-workbook-1.json'
  pull_request:
    branches: [ main ]
    paths:
      - 'demo-workbook-1.json'
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update ARM template even if no changes'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pull-requests: write

jobs:
  combine-workbook:
    runs-on: ubuntu-latest
    name: Combine Workbook Content into ARM Template
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Install PowerShell
      run: |
        sudo apt-get update
        sudo apt-get install -y powershell

    - name: Generate ARM Template using PowerShell
      run: |
        echo "üèóÔ∏è Generating ARM template using PowerShell script..."
        pwsh -File combine-workbook.ps1
        echo "‚úÖ ARM template generated successfully"

    - name: Validate Generated Template
      run: |
        echo "üîç Validating generated ARM template..."
        
        # Install jq if not available
        sudo apt-get install -y jq
        
        # Validate JSON syntax
        if ! jq empty demo-armtemplate-1.json; then
          echo "‚ùå Generated ARM template has invalid JSON syntax"
          exit 1
        fi
        
        # Validate required ARM template sections
        REQUIRED_SECTIONS=('$schema' 'contentVersion' 'parameters' 'variables' 'resources' 'outputs')
        for section in "${REQUIRED_SECTIONS[@]}"; do
          if [ "$section" = '$schema' ]; then
            # Special handling for $schema due to jq syntax
            if ! jq -e '.["$schema"]' demo-armtemplate-1.json > /dev/null; then
              echo "‚ùå Missing required ARM template section: $section"
              exit 1
            fi
          else
            if ! jq -e ".$section" demo-armtemplate-1.json > /dev/null; then
              echo "‚ùå Missing required ARM template section: $section"
              exit 1
            fi
          fi
        done
        
        # Validate workbook template content is embedded
        if ! jq -e '.resources[0].properties.templateData.version' demo-armtemplate-1.json > /dev/null; then
          echo "‚ùå Workbook template content appears to be missing or malformed"
          exit 1
        fi
        
        # Check if templateData has substantial content (check for items array)
        if ! jq -e '.resources[0].properties.templateData.items | length > 0' demo-armtemplate-1.json > /dev/null; then
          echo "‚ùå Workbook template content appears to be empty (no items found)"
          exit 1
        fi
        
        # Validate templateData contains a valid workbook structure
        WORKBOOK_VERSION=$(jq -r '.resources[0].properties.templateData.version' demo-armtemplate-1.json)
        if [[ ! "$WORKBOOK_VERSION" =~ ^Notebook/ ]]; then
          echo "‚ùå Invalid workbook version format: $WORKBOOK_VERSION"
          exit 1
        fi
        
        ITEM_COUNT=$(jq -r '.resources[0].properties.templateData.items | length' demo-armtemplate-1.json)
        echo "‚úÖ Workbook template validation successful - $ITEM_COUNT items found"
        
        # Validate it's a workbook template resource
        RESOURCE_TYPE=$(jq -r '.resources[0].type' demo-armtemplate-1.json)
        if [ "$RESOURCE_TYPE" != "microsoft.insights/workbooktemplates" ]; then
          echo "‚ùå Expected workbook template resource type, found: $RESOURCE_TYPE"
          exit 1
        fi
        
        # Check template size (ARM templates have size limits)
        TEMPLATE_SIZE=$(wc -c < demo-armtemplate-1.json)
        if [ $TEMPLATE_SIZE -gt 4194304 ]; then  # 4MB limit
          echo "‚ö†Ô∏è  Warning: ARM template size ($TEMPLATE_SIZE bytes) is approaching the 4MB limit"
        fi
        
        echo "‚úÖ ARM template validation successful"
        echo "üìä Template size: $TEMPLATE_SIZE bytes"

    - name: Check for Changes
      id: check-changes
      run: |
        if git diff --quiet demo-armtemplate-1.json || [ "${{ github.event.inputs.force_update }}" == "true" ]; then
          if [ "${{ github.event.inputs.force_update }}" == "true" ]; then
            echo "üîÑ Force update requested"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "‚ÑπÔ∏è  No changes detected in ARM template"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "üìù Changes detected in ARM template"
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit and Push Changes
      if: steps.check-changes.outputs.has_changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add demo-armtemplate-1.json
        git commit -m "Auto-update ARM template from workbook changes
        
        - Generated from demo-workbook-1.json
        - Updated: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        - Source commit: ${{ github.sha }}
        - Workflow: ${{ github.workflow }}
        
        Co-authored-by: GitHub Actions <action@github.com>"
        
        # Push changes
        git push

    - name: Create Summary
      if: always()
      run: |
        echo "### üîÑ Workbook to ARM Template Combination Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.check-changes.outputs.has_changes }}" == "true" ]; then
          echo "‚úÖ **Status**: ARM template updated successfully" >> $GITHUB_STEP_SUMMARY
          echo "üìù **Changes**: New ARM template generated and committed" >> $GITHUB_STEP_SUMMARY
        else
          echo "‚ÑπÔ∏è **Status**: No changes needed" >> $GITHUB_STEP_SUMMARY
          echo "üìù **Changes**: ARM template is already up to date" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "üìä **Template Info**:" >> $GITHUB_STEP_SUMMARY
        echo "- File: \`demo-armtemplate-1.json\`" >> $GITHUB_STEP_SUMMARY
        echo "- Source: \`demo-workbook-1.json\`" >> $GITHUB_STEP_SUMMARY
        echo "- Generator: PowerShell Script (\`combine-workbook.ps1\`)" >> $GITHUB_STEP_SUMMARY
        echo "- Resource Type: \`microsoft.insights/workbooktemplates\`" >> $GITHUB_STEP_SUMMARY

    - name: Upload ARM Template as Artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: arm-template
        path: demo-armtemplate-1.json
        retention-days: 1